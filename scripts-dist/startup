#!/bin/bash

# Startup script to mount usb drives on media_dir or NFS mount on archive_dir
#
# This script should be configured in ~/.pikrellcam/pikrellcam.conf:
#
#   on_startup $C/startup $I $m $a $G
#
# NOTE: the above on_startup command is not compatible with the default
#	~/pikrellcam/scripts/startup script in pikrellcam versions prior to
#	V 4.1.5.  If you have copied this script over an existing startup script,
#   be sure to check how on_startup is configured in pikrellcam.conf.
#
# Argument substitution done by PiKrellCam before running this script:
#   $C - scripts directory so this script is found.
#   $I - install directory path
# Variables configured in ~/.pikrellcam/pikrellcam.conf
#   $m - the media_dir directory path
#   $a - the archive_dir directory path
#   $G - the log_file path
#


# Set MOUNT_DISK to a disk name to mount a disk on media_dir
# If the media_dir directory is on a tmpfs, it will not be mounted.
# For example, to mount /dev/sda1 on media_dir:
#
# MOUNT_DISK=sda1
#

MOUNT_DISK=""


# Set NFS_ARCHIVE to nfs mount a disk on archive_dir.  See the help page.
# NFS_ARCHIVE should match the nfs mount line in /etc/fstab
# For example, the examples in the web help page would set:
#
# NFS_ARCHIVE=gkrellm6:/home/bill/media-archive
#   or
# NFS_ARCHIVE=rpi0:/mnt/archive/media-archive
#

NFS_ARCHIVE=""



install_dir=$1
media_dir=$2
archive_dir=$3
log_file=$4

if [ "$log_file" == "" ]
then
	log_file=/dev/null
fi

if [ "$MOUNT_DISK" == "" ]
then
	echo "  MOUNT_DISK is not set." >> $log_file
else
	if ! grep -q $MOUNT_DISK /proc/partitions
	then
		echo "  Cannot find $MOUNT_DISK to mount on $media_dir" >> $log_file
		MOUNT_DISK=""
	fi
fi

if [ "$MOUNT_DISK" != "" ]
then
	disk_device=/dev/$MOUNT_DISK
	cd $install_dir

	curmount_dir=`fgrep "$disk_device " /etc/mtab | cut -f 2 -d ' ' `
	if [ "$curmount_dir" != "" ]
	then
		if [ "$curmount_dir" != "$media_dir" ]
		then
			echo "  umount $disk_device from $curmount_dir" >> $log_file
			sudo umount $disk_device
		fi
	fi

	if ! mountpoint -q $media_dir
	then
		FS_TYPE=`stat -f -c '%T' $media_dir`
		if [ "$FS_TYPE" != "tmpfs" ]
		then
			if sudo mount $disk_device $media_dir
			then
				echo "  mounted $disk_device on $media_dir" >> $log_file
			else
				echo "  mount of $disk_device on $media_dir failed" >> $log_file
			fi
			#
			# PiKrellCam will make subdirectories and fixup permissions.
		else
			echo "  not mounting $disk_device because $media_dir is a tmpfs" >> $log_file
		fi
	else
		echo "  $media_dir is already mounted." >> $log_file
	fi
fi



if [ "$NFS_ARCHIVE" == "" ]
then
	echo "  NFS_ARCHIVE is not set." >> $log_file
fi

if [ "$NFS_ARCHIVE" != "" ]
then
	fs_type=$(stat -f -L -c %T $archive_dir)

	stale=$(echo "$fs_type" | grep "Stale")

	if [ "$stale" != "" ]
	then
		echo "  NFS archive directory $archive_dir is stale." >> $log_file
		echo "    Remote NFS server may be down?" >> log_file
		echo "    To force unmount, run:  sudo umount -f $archive_dir" >> log_file
	elif [ "$fs_type" == "nfs" ]
	then
		echo "  $archive_dir is already NFS mounted." >> $log_file
	else
		cp $install_dir/www/images/nfs-mounting.jpg /run/pikrellcam/mjpeg.jpg
		sudo mount $NFS_ARCHIVE
		fs_type=$(stat -f -L -c %T $archive_dir)
		if [ "$fs_type" == "nfs" ]
		then
			echo "  NFS mounted $NFS_ARCHIVE" >> $log_file
		else
			echo "  NFS mount of $NFS_ARCHIVE failed" >> $log_file
		fi
	fi
fi
